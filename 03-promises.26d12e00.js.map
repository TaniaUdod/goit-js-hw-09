{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAyBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACJF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAElBA,E,IAjCPL,EAAKa,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBAMN,IALA,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CC,EAAwBH,EAAxBX,MAAOe,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,EAAID,EAAaC,GAAK,EAGpCxB,EAAcwB,EAFdL,GAAcG,GAGXG,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACnByB,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAErE6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACpByB,EAAAhC,GAASiC,OAAOI,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGvEL,EAAKoC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i < inputAmount; i += 1) {\n    inputDelay += inputStep;\n\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n      resolve({ position, delay });\n      } else {\n      reject({ position, delay });\n      }\n    }, delay);\n  })\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","inputDelay","Number","value","inputStep","inputAmount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.26d12e00.js.map"}